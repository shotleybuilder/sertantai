defmodule Sertantai.Repo.Migrations.Billing do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:billing_subscriptions, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :customer_id, :uuid, null: false
      add :plan_id, :uuid, null: false
      add :stripe_subscription_id, :text, null: false
      add :status, :text, null: false
      add :current_period_start, :utc_datetime, null: false
      add :current_period_end, :utc_datetime, null: false
      add :cancel_at_period_end, :boolean, null: false, default: false
      add :canceled_at, :utc_datetime
      add :trial_start, :utc_datetime
      add :trial_end, :utc_datetime
      add :quantity, :bigint, null: false, default: 1
      add :metadata, :map, null: false, default: %{}

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:billing_plans, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :stripe_price_id, :text, null: false
      add :amount, :decimal, null: false
      add :currency, :text, null: false, default: "usd"
      add :interval, :text, null: false, default: "month"
      add :features, {:array, :text}, null: false, default: []
      add :user_role, :text, null: false
      add :active, :boolean, null: false, default: true
      add :trial_days, :bigint

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:billing_payments, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :customer_id, :uuid, null: false
      add :subscription_id, :uuid
      add :stripe_payment_intent_id, :text
      add :stripe_invoice_id, :text
      add :amount, :decimal, null: false
      add :currency, :text, null: false, default: "usd"
      add :status, :text, null: false
      add :failure_reason, :text
      add :payment_method, :text
      add :description, :text
      add :metadata, :map, null: false, default: %{}
      add :processed_at, :utc_datetime

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:billing_customers, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:billing_subscriptions) do
      modify :customer_id,
             references(:billing_customers,
               column: :id,
               name: "billing_subscriptions_customer_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :plan_id,
             references(:billing_plans,
               column: :id,
               name: "billing_subscriptions_plan_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:billing_payments) do
      modify :customer_id,
             references(:billing_customers,
               column: :id,
               name: "billing_payments_customer_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :subscription_id,
             references(:billing_subscriptions,
               column: :id,
               name: "billing_payments_subscription_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:billing_customers) do
      add :user_id,
          references(:users,
            column: :id,
            name: "billing_customers_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :stripe_customer_id, :text, null: false
      add :email, :text, null: false
      add :name, :text
      add :company, :text
      add :phone, :text
      add :address, :map
      add :tax_id, :text
      add :metadata, :map, null: false, default: %{}

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end
  end

  def down do
    drop constraint(:billing_customers, "billing_customers_user_id_fkey")

    alter table(:billing_customers) do
      remove :updated_at
      remove :inserted_at
      remove :metadata
      remove :tax_id
      remove :address
      remove :phone
      remove :company
      remove :name
      remove :email
      remove :stripe_customer_id
      remove :user_id
    end

    drop constraint(:billing_payments, "billing_payments_customer_id_fkey")

    drop constraint(:billing_payments, "billing_payments_subscription_id_fkey")

    alter table(:billing_payments) do
      modify :subscription_id, :uuid
      modify :customer_id, :uuid
    end

    drop constraint(:billing_subscriptions, "billing_subscriptions_customer_id_fkey")

    drop constraint(:billing_subscriptions, "billing_subscriptions_plan_id_fkey")

    alter table(:billing_subscriptions) do
      modify :plan_id, :uuid
      modify :customer_id, :uuid
    end

    drop table(:billing_customers)

    drop table(:billing_payments)

    drop table(:billing_plans)

    drop table(:billing_subscriptions)
  end
end
